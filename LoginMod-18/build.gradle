
plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'eclipse'
    id 'idea'
    id 'java-library'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'java'
}


group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {

    mappings channel: mapping_channel, version: mapping_version


    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'


            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }


        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven {
        name 'Ali Mirror Maven'
        url "https://maven.aliyun.com/nexus/content/groups/public"
        allowInsecureProtocol = true
    }
    maven {
        name 'clojars Mirror Maven'
        url "https://clojars.org/repo/"
        allowInsecureProtocol = true
    }
/*    maven {
        name "jitpack"
        url "https://jitpack.io"
    }*/
    maven {
        name = 'MinecraftForge'
        url = 'https://maven.minecraftforge.net/'
        allowInsecureProtocol = true
    }

}


dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.4.1'
    implementation "com.mysql:mysql-connector-j:8.0.33"
//    implementation 'org.tomlj:tomlj:1.1.1'

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

}

test {
    useJUnitPlatform()
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version       : forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : mod_authors,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

reobf.create('jarJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

reobf {
    shadowJar {}
}

shadowJar.finalizedBy('reobfShadowJar')

shadowJar {
    mergeServiceFiles()
    dependencies {
        include(dependency("com.zaxxer:HikariCP"))
//        include(dependency("org.tomlj:tomlj"))
//        include(dependency("com.mysql:mysql-connector-j"))
    }

    relocate "com.zaxxer.hikari", "com.github.asyncraft.shadow.hikari"

}



